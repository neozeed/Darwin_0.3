{
    FILESTABLE = {
        FRAMEWORKS = (); 
        HEADERSEARCH = (); 
        H_FILES = (
            crypt.h, 
            config.h, 
            datagram.h, 
            debug.h, 
            disp_hdr.h, 
            dispatcher.h, 
            ipc.h, 
            ipc_hdr.h, 
            ipc_internal.h, 
            ipc_rec.h, 
            ipc_swap.h, 
            key_defs.h, 
            keyman.h, 
            km_defs.h, 
            lock_queue.h, 
            lock_queue_macros.h, 
            ls_defs.h, 
            mem.h, 
            netipc.h, 
            netmsg.h, 
            netname.h, 
            netname_defs.h, 
            network.h, 
            nm_extra.h, 
            nm_init.h, 
            nn.h, 
            nn_defs.h, 
            pc_defs.h, 
            po_defs.h, 
            port_defs.h, 
            portcheck.h, 
            portops.h, 
            portrec.h, 
            portsearch.h, 
            ps_defs.h, 
            rwlock.h, 
            sbuf.h, 
            sm_init_defs.h, 
            srr.h, 
            srr_defs.h, 
            sys_queue.h, 
            tcp_defs.h, 
            timer.h, 
            trace.h, 
            transport.h, 
            uid.h, 
            access_list.h
        ); 
        LIBRARYSEARCH = (); 
        M_FILES = (); 
        OTHER_LIBS = (); 
        OTHER_LINKED = (
            crypt.c, 
            datagram.c, 
            dispatcher.c, 
            ipc.c, 
            ipc_block.c, 
            ipc_exception.c, 
            ipc_msg.c, 
            ipc_rpc.c, 
            ipc_swap.c, 
            km_procs.c, 
            km_server.c, 
            km_utils.c, 
            lock_queue.c, 
            ls_rec.c, 
            mem.c, 
            netname.c, 
            netname_server.c, 
            network.c, 
            nm_enable.c, 
            nm_extra.c, 
            nm_init.c, 
            nmserver.c, 
            nn_handler.c, 
            nn_procs.c, 
            pc_handler.c, 
            pc_startup.c, 
            po_message.c, 
            po_notify.c, 
            po_utils.c, 
            portcheck.c, 
            portops.c, 
            portrec.c, 
            portsearch.c, 
            ps_auth.c, 
            sbuf.c, 
            srr.c, 
            srr_handler.c, 
            srr_utils.c, 
            tcp.c, 
            timer.c, 
            transport.c, 
            uid.c, 
            win_daemon.c, 
            access_list.c
        ); 
        OTHER_SOURCES = (
            Makefile.preamble, 
            Makefile, 
            Makefile.postamble, 
            netname.defs, 
            km_user.c, 
            Makefile.nt, 
            multperm.c, 
            netipc.c, 
            nmserver.access
        ); 
        PRECOMPILED_HEADERS = (); 
        PROJECT_HEADERS = (); 
        PUBLIC_HEADERS = (); 
    }; 
    LANGUAGE = English; 
    LOCALIZABLE_FILES = {}; 
    MAKEFILEDIR = "$(MAKEFILEPATH)/pb_makefiles"; 
    NEXTSTEP_BUILDTOOL = /bin/gnumake; 
    NEXTSTEP_INSTALLDIR = /usr/sbin; 
    NEXTSTEP_JAVA_COMPILER = /usr/bin/javac; 
    NEXTSTEP_OBJCPLUS_COMPILER = /usr/bin/cc; 
    PDO_UNIX_BUILDTOOL = /bin/gnumake; 
    PDO_UNIX_INSTALLDIR = "$(SYSTEM_LIBRARY_DIR)/Executables"; 
    PDO_UNIX_JAVA_COMPILER = "$(JDKBINDIR)/javac"; 
    PDO_UNIX_OBJCPLUS_COMPILER = "$(NEXTDEV_BIN)/gcc"; 
    PROJECTNAME = nmserver; 
    PROJECTTYPE = Tool; 
    PROJECTVERSION = 2.8; 
    WINDOWS_BUILDDIR = "d:/temp/nmserver"; 
    WINDOWS_BUILDTOOL = make; 
    WINDOWS_INSTALLDIR = "$(SYSTEM_LIBRARY_DIR)/System"; 
    WINDOWS_JAVA_COMPILER = "$(JDKBINDIR)/javac.exe"; 
    WINDOWS_LINKEROPTIONS = "-win"; 
    WINDOWS_OBJCPLUS_COMPILER = "$(DEVDIR)/gcc"; 
}
